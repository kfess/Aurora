#[derive(Debug, Clone, PartialEq, Eq)]
pub enum ContestCategory {
    Atcoder(AtcoderCategory),
    Codeforces(CodeforcesCategory),
    Yukicoder(YukicoderCategory),
    YOJ(YOJCategory),
    Aoj(AojCategory),
}

#[derive(Debug, Clone, PartialEq, Eq)]
pub enum AtcoderCategory {
    ABC,
    ARC,
    AGC,
    AHC,
    PAST,
    JOI,
    JAG,
    ABCLike,
    ARCLike,
    AGCLike,
    Marathon,
    OtherSponsored,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq)]
pub enum CodeforcesCategory {
    Div1AndDiv2,
    Div1,
    Div2,
    Div3,
    Div4,
    Educational,
    Global,
    Kotlin,
    ICPC,
    QSharp,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq)]
pub enum YukicoderCategory {
    Normal,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq)]
pub enum YOJCategory {
    Sample,
    DataStructure,
    Graph,
    Tree,
    Math,
    Convolution,
    Polynomial,
    Matrix,
    String,
    Geometry,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq)]
pub enum AojCategory {
    Volume0,
    Volume1,
    Volume2,
    Volume3,
    Volume4,
    Volume5,
    Volume6,
    Volume7,
    Volume10,
    Volume11,
    Volume12,
    Volume13,
    Volume14,
    Volume15,
    Volume16,
    Volume20,
    Volume21,
    Volume22,
    Volume23,
    Volume24,
    Volume25,
    Volume26,
    Volume27,
    Volume28,
    Volume29,
    Volume30,
    Volume31,
    Volume32,
    Volume33,
    Volume34,
    Volume35,
    Volume40,
    JOI,
    PCK,
    ICPC,
    JAG,
    VPC,
    UOA,
    Other, // Generally, this line isn't necessary. However, it's included just in case.
}

impl From<ContestCategory> for String {
    fn from(value: ContestCategory) -> Self {
        match value {
            ContestCategory::Atcoder(c) => match c {
                AtcoderCategory::ABC => "ABC".to_string(),
                AtcoderCategory::ARC => "ARC".to_string(),
                AtcoderCategory::AGC => "AGC".to_string(),
                AtcoderCategory::AHC => "AHC".to_string(),
                AtcoderCategory::PAST => "PAST".to_string(),
                AtcoderCategory::JOI => "JOI".to_string(),
                AtcoderCategory::JAG => "JAG".to_string(),
                AtcoderCategory::ABCLike => "ABC-Like".to_string(),
                AtcoderCategory::ARCLike => "ARC-Like".to_string(),
                AtcoderCategory::AGCLike => "AGC-Like".to_string(),
                AtcoderCategory::Marathon => "Marathon".to_string(),
                AtcoderCategory::OtherSponsored => "Other Sponsored".to_string(),
                AtcoderCategory::Other => "Other".to_string(),
            },
            ContestCategory::Codeforces(c) => match c {
                CodeforcesCategory::Div1AndDiv2 => "div. 1 + div. 2".to_string(),
                CodeforcesCategory::Div1 => "div. 1".to_string(),
                CodeforcesCategory::Div2 => "div. 2".to_string(),
                CodeforcesCategory::Div3 => "div. 3".to_string(),
                CodeforcesCategory::Div4 => "div. 4".to_string(),
                CodeforcesCategory::Educational => "Educational".to_string(),
                CodeforcesCategory::Global => "Global".to_string(),
                CodeforcesCategory::Kotlin => "Kotlin".to_string(),
                CodeforcesCategory::ICPC => "ICPC".to_string(),
                CodeforcesCategory::QSharp => "Q#".to_string(),
                CodeforcesCategory::Other => "Other".to_string(),
            },
            ContestCategory::Yukicoder(c) => match c {
                YukicoderCategory::Normal => "Normal".to_string(),
                YukicoderCategory::Other => "Other".to_string(),
            },
            ContestCategory::YOJ(c) => match c {
                YOJCategory::Sample => "Sample".to_string(),
                YOJCategory::DataStructure => "Data Structure".to_string(),
                YOJCategory::Graph => "Graph".to_string(),
                YOJCategory::Tree => "Tree".to_string(),
                YOJCategory::Math => "Math".to_string(),
                YOJCategory::Convolution => "Convolution".to_string(),
                YOJCategory::Polynomial => "Polynomial".to_string(),
                YOJCategory::Matrix => "Matrix".to_string(),
                YOJCategory::String => "String".to_string(),
                YOJCategory::Geometry => "Geometry".to_string(),
                YOJCategory::Other => "Other".to_string(),
            },
            ContestCategory::Aoj(c) => match c {
                AojCategory::Volume0 => "Volume 0".to_string(),
                AojCategory::Volume1 => "Volume 1".to_string(),
                AojCategory::Volume2 => "Volume 2".to_string(),
                AojCategory::Volume3 => "Volume 3".to_string(),
                AojCategory::Volume4 => "Volume 4".to_string(),
                AojCategory::Volume5 => "Volume 5".to_string(),
                AojCategory::Volume6 => "Volume 6".to_string(),
                AojCategory::Volume7 => "Volume 7".to_string(),
                AojCategory::Volume10 => "Volume 10".to_string(),
                AojCategory::Volume11 => "Volume 11".to_string(),
                AojCategory::Volume12 => "Volume 12".to_string(),
                AojCategory::Volume13 => "Volume 13".to_string(),
                AojCategory::Volume14 => "Volume 14".to_string(),
                AojCategory::Volume15 => "Volume 15".to_string(),
                AojCategory::Volume16 => "Volume 16".to_string(),
                AojCategory::Volume20 => "Volume 20".to_string(),
                AojCategory::Volume21 => "Volume 21".to_string(),
                AojCategory::Volume22 => "Volume 22".to_string(),
                AojCategory::Volume23 => "Volume 23".to_string(),
                AojCategory::Volume24 => "Volume 24".to_string(),
                AojCategory::Volume25 => "Volume 25".to_string(),
                AojCategory::Volume26 => "Volume 26".to_string(),
                AojCategory::Volume27 => "Volume 27".to_string(),
                AojCategory::Volume28 => "Volume 28".to_string(),
                AojCategory::Volume29 => "Volume 29".to_string(),
                AojCategory::Volume30 => "Volume 30".to_string(),
                AojCategory::Volume31 => "Volume 31".to_string(),
                AojCategory::Volume32 => "Volume 32".to_string(),
                AojCategory::Volume33 => "Volume 33".to_string(),
                AojCategory::Volume34 => "Volume 34".to_string(),
                AojCategory::Volume35 => "Volume 35".to_string(),
                AojCategory::Volume40 => "Volume 40".to_string(),
                AojCategory::JOI => "JOI".to_string(),
                AojCategory::PCK => "PCK".to_string(),
                AojCategory::ICPC => "ICPC".to_string(),
                AojCategory::JAG => "JAG".to_string(),
                AojCategory::VPC => "VPC".to_string(),
                AojCategory::UOA => "UOA".to_string(),
                AojCategory::Other => "Other".to_string(),
            },
        }
    }
}
