#[derive(Debug, Clone, PartialEq, Eq, serde::Serialize, serde::Deserialize)]
pub enum ContestCategory {
    Atcoder(AtcoderCategory),
    Codeforces(CodeforcesCategory),
    Yukicoder(YukicoderCategory),
    YOJ(YOJCategory),
    Aoj(AojCategory),
}

#[derive(Debug, Clone, PartialEq, Eq, serde::Serialize, serde::Deserialize)]
pub enum AtcoderCategory {
    ABC,
    ARC,
    AGC,
    AHC,
    PAST,
    JOI,
    JAG,
    ABCLike,
    ARCLike,
    AGCLike,
    Marathon,
    OtherSponsored,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq, serde::Serialize, serde::Deserialize)]
pub enum CodeforcesCategory {
    Div1AndDiv2,
    Div1,
    Div2,
    Div3,
    Div4,
    Educational,
    Global,
    Kotlin,
    ICPC,
    QSharp,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq, serde::Serialize, serde::Deserialize)]
pub enum YukicoderCategory {
    Normal,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq, serde::Serialize, serde::Deserialize)]
pub enum YOJCategory {
    Sample,
    DataStructure,
    Graph,
    Tree,
    Math,
    Convolution,
    Polynomial,
    Matrix,
    String,
    Geometry,
    Other,
}

#[derive(Debug, Clone, PartialEq, Eq, serde::Serialize, serde::Deserialize)]
pub enum AojCategory {
    Volume0,
    Volume1,
    Volume2,
    Volume3,
    Volume4,
    Volume5,
    Volume6,
    Volume7,
    Volume10,
    Volume11,
    Volume12,
    Volume13,
    Volume14,
    Volume15,
    Volume16,
    Volume20,
    Volume21,
    Volume22,
    Volume23,
    Volume24,
    Volume25,
    Volume26,
    Volume27,
    Volume28,
    Volume29,
    Volume30,
    Volume31,
    Volume32,
    Volume33,
    Volume34,
    Volume35,
    Volume40,
    JOI,
    PCK,
    ICPC,
    JAG,
    VPC,
    UOA,
    Other, // Generally, this line isn't necessary. However, it's included just in case.
}

impl From<ContestCategory> for String {
    fn from(value: ContestCategory) -> Self {
        match value {
            ContestCategory::Atcoder(c) => match c {
                AtcoderCategory::ABC => "ABC".to_string(),
                AtcoderCategory::ARC => "ARC".to_string(),
                AtcoderCategory::AGC => "AGC".to_string(),
                AtcoderCategory::AHC => "AHC".to_string(),
                AtcoderCategory::PAST => "PAST".to_string(),
                AtcoderCategory::JOI => "JOI".to_string(),
                AtcoderCategory::JAG => "JAG".to_string(),
                AtcoderCategory::ABCLike => "ABC-Like".to_string(),
                AtcoderCategory::ARCLike => "ARC-Like".to_string(),
                AtcoderCategory::AGCLike => "AGC-Like".to_string(),
                AtcoderCategory::Marathon => "Marathon".to_string(),
                AtcoderCategory::OtherSponsored => "Other Sponsored".to_string(),
                AtcoderCategory::Other => "Other".to_string(),
            },
            ContestCategory::Codeforces(c) => match c {
                CodeforcesCategory::Div1AndDiv2 => "Div.1+Div.2".to_string(),
                CodeforcesCategory::Div1 => "Div.1".to_string(),
                CodeforcesCategory::Div2 => "Div.2".to_string(),
                CodeforcesCategory::Div3 => "Div.3".to_string(),
                CodeforcesCategory::Div4 => "Div.4".to_string(),
                CodeforcesCategory::Educational => "Educational".to_string(),
                CodeforcesCategory::Global => "Global".to_string(),
                CodeforcesCategory::Kotlin => "Kotlin".to_string(),
                CodeforcesCategory::ICPC => "ICPC".to_string(),
                CodeforcesCategory::QSharp => "Q#".to_string(),
                CodeforcesCategory::Other => "Other".to_string(),
            },
            ContestCategory::Yukicoder(c) => match c {
                YukicoderCategory::Normal => "Normal".to_string(),
                YukicoderCategory::Other => "Other".to_string(),
            },
            ContestCategory::YOJ(c) => match c {
                YOJCategory::Sample => "Sample".to_string(),
                YOJCategory::DataStructure => "Data Structure".to_string(),
                YOJCategory::Graph => "Graph".to_string(),
                YOJCategory::Tree => "Tree".to_string(),
                YOJCategory::Math => "Math".to_string(),
                YOJCategory::Convolution => "Convolution".to_string(),
                YOJCategory::Polynomial => "Polynomial".to_string(),
                YOJCategory::Matrix => "Matrix".to_string(),
                YOJCategory::String => "String".to_string(),
                YOJCategory::Geometry => "Geometry".to_string(),
                YOJCategory::Other => "Other".to_string(),
            },
            ContestCategory::Aoj(c) => match c {
                AojCategory::Volume0 => "Volume 0".to_string(),
                AojCategory::Volume1 => "Volume 1".to_string(),
                AojCategory::Volume2 => "Volume 2".to_string(),
                AojCategory::Volume3 => "Volume 3".to_string(),
                AojCategory::Volume4 => "Volume 4".to_string(),
                AojCategory::Volume5 => "Volume 5".to_string(),
                AojCategory::Volume6 => "Volume 6".to_string(),
                AojCategory::Volume7 => "Volume 7".to_string(),
                AojCategory::Volume10 => "Volume 10".to_string(),
                AojCategory::Volume11 => "Volume 11".to_string(),
                AojCategory::Volume12 => "Volume 12".to_string(),
                AojCategory::Volume13 => "Volume 13".to_string(),
                AojCategory::Volume14 => "Volume 14".to_string(),
                AojCategory::Volume15 => "Volume 15".to_string(),
                AojCategory::Volume16 => "Volume 16".to_string(),
                AojCategory::Volume20 => "Volume 20".to_string(),
                AojCategory::Volume21 => "Volume 21".to_string(),
                AojCategory::Volume22 => "Volume 22".to_string(),
                AojCategory::Volume23 => "Volume 23".to_string(),
                AojCategory::Volume24 => "Volume 24".to_string(),
                AojCategory::Volume25 => "Volume 25".to_string(),
                AojCategory::Volume26 => "Volume 26".to_string(),
                AojCategory::Volume27 => "Volume 27".to_string(),
                AojCategory::Volume28 => "Volume 28".to_string(),
                AojCategory::Volume29 => "Volume 29".to_string(),
                AojCategory::Volume30 => "Volume 30".to_string(),
                AojCategory::Volume31 => "Volume 31".to_string(),
                AojCategory::Volume32 => "Volume 32".to_string(),
                AojCategory::Volume33 => "Volume 33".to_string(),
                AojCategory::Volume34 => "Volume 34".to_string(),
                AojCategory::Volume35 => "Volume 35".to_string(),
                AojCategory::Volume40 => "Volume 40".to_string(),
                AojCategory::JOI => "JOI".to_string(),
                AojCategory::PCK => "PCK".to_string(),
                AojCategory::ICPC => "ICPC".to_string(),
                AojCategory::JAG => "JAG".to_string(),
                AojCategory::VPC => "VPC".to_string(),
                AojCategory::UOA => "UOA".to_string(),
                AojCategory::Other => "Other".to_string(),
            },
        }
    }
}

impl From<&str> for ContestCategory {
    fn from(value: &str) -> Self {
        match value {
            "ABC" => ContestCategory::Atcoder(AtcoderCategory::ABC),
            "ARC" => ContestCategory::Atcoder(AtcoderCategory::ARC),
            "AGC" => ContestCategory::Atcoder(AtcoderCategory::AGC),
            "AHC" => ContestCategory::Atcoder(AtcoderCategory::AHC),
            "PAST" => ContestCategory::Atcoder(AtcoderCategory::PAST),
            "JOI" => ContestCategory::Atcoder(AtcoderCategory::JOI),
            "JAG" => ContestCategory::Atcoder(AtcoderCategory::JAG),
            "ABC-Like" => ContestCategory::Atcoder(AtcoderCategory::ABCLike),
            "ARC-Like" => ContestCategory::Atcoder(AtcoderCategory::ARCLike),
            "AGC-Like" => ContestCategory::Atcoder(AtcoderCategory::AGCLike),
            "Marathon" => ContestCategory::Atcoder(AtcoderCategory::Marathon),
            "Other Sponsored" => ContestCategory::Atcoder(AtcoderCategory::OtherSponsored),
            "Other" => ContestCategory::Atcoder(AtcoderCategory::Other),
            "Div.1+Div.2" => ContestCategory::Codeforces(CodeforcesCategory::Div1AndDiv2),
            "Div.1" => ContestCategory::Codeforces(CodeforcesCategory::Div1),
            "Div.2" => ContestCategory::Codeforces(CodeforcesCategory::Div2),
            "Div.3" => ContestCategory::Codeforces(CodeforcesCategory::Div3),
            "Div.4" => ContestCategory::Codeforces(CodeforcesCategory::Div4),
            "Educational" => ContestCategory::Codeforces(CodeforcesCategory::Educational),
            "Global" => ContestCategory::Codeforces(CodeforcesCategory::Global),
            "Kotlin" => ContestCategory::Codeforces(CodeforcesCategory::Kotlin),
            "ICPC" => ContestCategory::Codeforces(CodeforcesCategory::ICPC),
            "Q#" => ContestCategory::Codeforces(CodeforcesCategory::QSharp),
            "Other" => ContestCategory::Codeforces(CodeforcesCategory::Other),
            "Normal" => ContestCategory::Yukicoder(YukicoderCategory::Normal),
            "Other" => ContestCategory::Yukicoder(YukicoderCategory::Other),
            "Sample" => ContestCategory::YOJ(YOJCategory::Sample),
            "Data Structure" => ContestCategory::YOJ(YOJCategory::DataStructure),
            "Graph" => ContestCategory::YOJ(YOJCategory::Graph),
            "Tree" => ContestCategory::YOJ(YOJCategory::Tree),
            "Math" => ContestCategory::YOJ(YOJCategory::Math),
            "Convolution" => ContestCategory::YOJ(YOJCategory::Convolution),
            "Polynomial" => ContestCategory::YOJ(YOJCategory::Polynomial),
            "Matrix" => ContestCategory::YOJ(YOJCategory::Matrix),
            "String" => ContestCategory::YOJ(YOJCategory::String),
            "Geometry" => ContestCategory::YOJ(YOJCategory::Geometry),
            "Other" => ContestCategory::YOJ(YOJCategory::Other),
            "Volume 0" => ContestCategory::Aoj(AojCategory::Volume0),
            "Volume 1" => ContestCategory::Aoj(AojCategory::Volume1),
            "Volume 2" => ContestCategory::Aoj(AojCategory::Volume2),
            "Volume 3" => ContestCategory::Aoj(AojCategory::Volume3),
            "Volume 4" => ContestCategory::Aoj(AojCategory::Volume4),
            "Volume 5" => ContestCategory::Aoj(AojCategory::Volume5),
            "Volume 6" => ContestCategory::Aoj(AojCategory::Volume6),
            "Volume 7" => ContestCategory::Aoj(AojCategory::Volume7),
            "Volume 10" => ContestCategory::Aoj(AojCategory::Volume10),
            "Volume 11" => ContestCategory::Aoj(AojCategory::Volume11),
            "Volume 12" => ContestCategory::Aoj(AojCategory::Volume12),
            "Volume 13" => ContestCategory::Aoj(AojCategory::Volume13),
            "Volume 14" => ContestCategory::Aoj(AojCategory::Volume14),
            "Volume 15" => ContestCategory::Aoj(AojCategory::Volume15),
            "Volume 16" => ContestCategory::Aoj(AojCategory::Volume16),
            "Volume 20" => ContestCategory::Aoj(AojCategory::Volume20),
            "Volume 21" => ContestCategory::Aoj(AojCategory::Volume21),
            "Volume 22" => ContestCategory::Aoj(AojCategory::Volume22),
            "Volume 23" => ContestCategory::Aoj(AojCategory::Volume23),
            "Volume 24" => ContestCategory::Aoj(AojCategory::Volume24),
            "Volume 25" => ContestCategory::Aoj(AojCategory::Volume25),
            "Volume 26" => ContestCategory::Aoj(AojCategory::Volume26),
            "Volume 27" => ContestCategory::Aoj(AojCategory::Volume27),
            "Volume 28" => ContestCategory::Aoj(AojCategory::Volume28),
            "Volume 29" => ContestCategory::Aoj(AojCategory::Volume29),
            "Volume 30" => ContestCategory::Aoj(AojCategory::Volume30),
            "Volume 31" => ContestCategory::Aoj(AojCategory::Volume31),
            "Volume 32" => ContestCategory::Aoj(AojCategory::Volume32),
            "Volume 33" => ContestCategory::Aoj(AojCategory::Volume33),
            "Volume 34" => ContestCategory::Aoj(AojCategory::Volume34),
            "Volume 35" => ContestCategory::Aoj(AojCategory::Volume35),
            "Volume 40" => ContestCategory::Aoj(AojCategory::Volume40),
            "JOI" => ContestCategory::Aoj(AojCategory::JOI),
            "PCK" => ContestCategory::Aoj(AojCategory::PCK),
            "ICPC" => ContestCategory::Aoj(AojCategory::ICPC),
            "JAG" => ContestCategory::Aoj(AojCategory::JAG),
            "VPC" => ContestCategory::Aoj(AojCategory::VPC),
            "UOA" => ContestCategory::Aoj(AojCategory::UOA),
            "Other" => ContestCategory::Aoj(AojCategory::Other),
            _ => ContestCategory::Aoj(AojCategory::Other),
        }
    }
}
